---
title: "Analysis Walkthrough"
author: "Anneliese Forlenza"
format:
  html:
    self-contained: true
    code-fold: true
    code-tools: true

---

We'll start by loading our libraries.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse) 
library(janitor) 
library(readxl) 
library(scales)
library(lubridate)
library(tidyverse)
library(tigris)
library(sf)
library(tmap)
library(tmaptools)
library(htmltools)
library(janitor)
library(rmapshaper)
library(here)
options(tigris_class = "sf")

```

Next, we'll import the Georgia election data for this project and then create two data sets for both the senate and governor results.

```{r}


#GA senate
senate_results <- read_excel(here("ga_votes.xlsx"), sheet = "senate")

#GA governor
governor_results <- read_excel(here("ga_votes.xlsx"), sheet = "governor")

```


Next, we'll make a column chart that shows how many counties the Republican candidate did better vs. worse than Trump in the Senate race.

```{r}

ggplot(senate_results, aes(x=county, y=pct_r_above_trump)) +
  geom_col()

```

Now, we'll make a column chart that shows how many counties the Republican candidate did better vs. worse than Trump in the Governor race.

```{r}

ggplot(governor_results, aes(x=county, y=pct_r_above_trump)) +
  geom_col()



```

For the Senate race, we'll create a chart that shows the top 10 biggest drops between the Republican candidate and Trump.

```{r}

new_senate_results <- senate_results %>%
  arrange(desc(pct_r_above_trump)) %>%
  head(10)

ggplot(new_senate_results, aes(x= reorder(county, -pct_r_above_trump), y=pct_r_above_trump)) +
  geom_col()



```

For the Senate race, let's also make a chart that shows the top 10 counties highest margins of victory for the Democratic candidate. Note: for this, you'll need to calculate the margin of victory for each county. This is shown below.

```{r}

MOV_data <- senate_results %>% 
  mutate(MOV = (pct_d_2022 - pct_r_2022))

MOV_data_senate <- MOV_data %>% 
  arrange(desc(MOV))

top_ten_MOV <- head(MOV_data_senate, 10)

ggplot(top_ten_MOV, aes(x = reorder(county, -MOV), y = MOV)) +
  geom_col()




```

**5)**

Next, for the Governor race, let's also make a chart that shows the top 10 counties highest margins of victory for the Democratic candidate. Note: for this, you'll need to calculate the margin of victory for each county. This is shown below.

```{r}

MOV_data_two <- governor_results %>% 
  mutate(MOV_gov = (pct_d_2022 - pct_r_2022))

MOV_data_governor <- MOV_data_two %>% 
  arrange(desc(MOV_gov))

top_ten_MOV_gov <- head(MOV_data_governor, 10)

ggplot(top_ten_MOV_gov, aes(x = reorder(county, -MOV_gov), y = MOV_gov)) +
  geom_col()



```

Now let's have some fun and make some maps!

To start, we'll use the `tigris` package to download a geospatial/map dataset with the county boundaries for Georgia.

```{r}
counties_geo <- tigris::counties(state = "GA", resolution = "20m", cb = TRUE)
```

Next, let's map out the polygons of the Georgia counties.

```{r}

tm_shape(counties_geo) + 
  tm_polygons()


```

Great, it looks like we should be good to go. Use the newly created map data in `counties_geo` along with our election results datasets to complete the questions below.

**7)**

For the Senate race, create a choropleth (shaded) map of Georgia counties that shows where the Republican candidate for Senate did better vs. worse than Trump.

```{r}

senatemap <- inner_join(counties_geo, senate_results, by = c("GEOID" = "fipsCode"))

tmap_mode(mode = "plot")

tm_shape(senatemap) +
  tm_polygons("is_r_above_trump", id = "GEOID")



```

**8)**

Now do the same as Question 7, just this time do it for the race for Governor.

```{r}

govmap <- inner_join(counties_geo, governor_results, by = c("GEOID" = "fipsCode"))

tmap_mode(mode = "plot")

tm_shape(govmap) +
  tm_polygons("is_r_above_trump", id = "GEOID")




```

**9)**

For the Senate race, create a choropleth map that shows the margins of victory for the Democratic candidate. To do that you'll need to compare the Democratic candidate's percentage (pct_d\_2022) with the Republican's (pct_r\_2022) to calculate the margin of victory for each county.

```{r}


MOV_senatemap <- inner_join(counties_geo, MOV_data_senate, by = c("GEOID" = "fipsCode"))

tmap_mode(mode = "plot")

tm_shape(MOV_senatemap) +
  tm_polygons("MOV", id = "GEOID")


```

**10)**

Now do the same as Question 4, only this time for the race for Governor instead.

```{r}


MOV_govmap <- inner_join(counties_geo, MOV_data_governor, by = c("GEOID" = "fipsCode"))

tmap_mode(mode = "plot")

tm_shape(MOV_govmap) +
  tm_polygons("MOV_gov", id = "GEOID")


```

**11)**

*Extra credit:* determine the biggest differences between what the Republican candidate for Governor received and what the Senate candidate received. Then create a choropleth map of Georgia counties that shows those differences.

(Note that to accomplish this you'll have to first run a join that merges the two datasets, so that you have both the senate and governor version of the `pct_r_2022` column in the same table.)

```{r}





```

# 
