[
  {
    "objectID": "searchable_web_table.html",
    "href": "searchable_web_table.html",
    "title": "Making a searchable database table",
    "section": "",
    "text": "#### MAKING A SEARCHABLE TABLE FOR THE WEB ####\n\n# First -- let's talk about: what is the Internet? What IS a web page?\n# An oldie but a goodie from 2009: https://www.youtube.com/watch?v=7_LPdttKXPc\n# Bottom line, it's just a bunch of computers connected to each other. \n# A website? It's just files on someone else's computer (aka server)\n\n\n#We can use the \"DT\" package to easily make a sortable, filterable, searchable data table\n#Just this little bit of code does a whole lot - check it out:\n\nDT::datatable(events)\n\n\n\n\n\n\n\n#We can already sort, but what if we want to allow the table to be FILTERED too?\n#It's easy, we just add:\nDT::datatable(events, \n              rownames = FALSE, \n              filter = \"top\"# <--- NEW STUFF HERE\n              )\n\n\n\n\n\n\n\n#Now hmm, what's up with the filters on the text columns? Why aren't they working?\n#It's because of a quirk in DT tables where filters will only work on text that is converted to a factor\n#So let's do that\nevents <- events %>% \n  mutate(\n    state = as_factor(state),\n    event_type = as.factor(event_type)\n  )\n\n\n#Now let's try the DT table code again and see if it worked\nDT::datatable(events, \n              rownames = FALSE, \n              filter = \"top\")\n\n\n\n\n\n\n\n#Now, for the coup de gr?ce\n#let's add some buttons at the top of the page to let people copy, download, etc\n#we do that using a DT \"extenstion\" called, you guessed it, Buttons\n# https://rstudio.github.io/DT/extensions.html\n\nDT::datatable(events, \n              rownames = FALSE, \n              filter = \"top\", \n              extensions = 'Buttons', \n              options = list(   # <--- NEW STUFF STARTS HERE\n                dom = 'Bfrtip',\n                buttons = c('copy', 'csv', \"excel\")\n              )) %>%\n  DT::formatStyle('cand_lastname',  color = 'red', fontWeight = 'bold')\n\n\n\n\n\n\n\n## saving the result\n\n# first we just need to assign our table to a variable...\n\nmytable <- DT::datatable(events, \n                         rownames = FALSE, \n                         filter = \"top\", \n                         extensions = 'Buttons', \n                         options = list(\n                           dom = 'Bfrtip',\n                           buttons = c('copy', 'csv', \"excel\")\n                         )) %>%\n  DT::formatStyle('cand_lastname',  color = 'red', fontWeight = 'bold') \n\n# ... then just run this simple bit of code to export to html\nDT::saveWidget(mytable, \"mytable.html\")\n\n\n# We've now created a working web page that can be put anywhere on the internet we choose\n# Yay!\n\n# If we stay within the world of quarto though we don't need to export it, we can just display it\n# within the quarto page of course\n\nWhat if we have a little table and want a super minimal table with everything stripped out\n\nevents %>%\n  head(5) %>% \n  DT::datatable(rownames = FALSE, \n                options = list(searching = FALSE, paging = FALSE, dom = \"tip\"))"
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html",
    "href": "01_virginia_election_project_datawrangling.html",
    "title": "Virginia Election Project",
    "section": "",
    "text": "Data available here: https://historical.elections.virginia.gov/elections/view/144567/\nA little column cleaning and we’ll load in the data file.\n\nprez_2020 <- read_csv(\"processed_data/va_2020_prez_cleaned.csv\")\n\nRows: 134 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): locality\nnum (3): biden, trump, total_votes_2021_prez\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nLet’s see what we have\n\nhead(prez_2020) \n\n# A tibble: 6 × 4\n  locality         biden trump total_votes_2021_prez\n  <chr>            <dbl> <dbl>                 <dbl>\n1 Accomack County   7578  9172                 16962\n2 Albemarle County 42466 20804                 64657\n3 Alexandria City  66240 14544                 82508\n4 Alleghany County  2243  5859                  8203\n5 Amelia County     2411  5390                  7893\n6 Amherst County    5672 11041                 17005\n\n\nCalculating percentage of the vote\n\nprez_2020 %>% \n  mutate(\n    biden_pct = biden/total_votes_2021_prez\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962     0.447\n 2 Albemarle County   42466 20804                 64657     0.657\n 3 Alexandria City    66240 14544                 82508     0.803\n 4 Alleghany County    2243  5859                  8203     0.273\n 5 Amelia County       2411  5390                  7893     0.305\n 6 Amherst County      5672 11041                 17005     0.334\n 7 Appomattox County   2418  6702                  9268     0.261\n 8 Arlington County  105344 22318                130699     0.806\n 9 Augusta County     10840 30714                 42278     0.256\n10 Bath County          646  1834                  2501     0.258\n# … with 124 more rows\n\n\nNow let’s do some rounding and move that decimal point\n\nprez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 1)\n  )\n\n# A tibble: 134 × 5\n   locality           biden trump total_votes_2021_prez biden_pct\n   <chr>              <dbl> <dbl>                 <dbl>     <dbl>\n 1 Accomack County     7578  9172                 16962      44.7\n 2 Albemarle County   42466 20804                 64657      65.7\n 3 Alexandria City    66240 14544                 82508      80.3\n 4 Alleghany County    2243  5859                  8203      27.3\n 5 Amelia County       2411  5390                  7893      30.5\n 6 Amherst County      5672 11041                 17005      33.4\n 7 Appomattox County   2418  6702                  9268      26.1\n 8 Arlington County  105344 22318                130699      80.6\n 9 Augusta County     10840 30714                 42278      25.6\n10 Bath County          646  1834                  2501      25.8\n# … with 124 more rows\n\n\nNow trump too\n\nprez_2020 <- prez_2020 %>% \n  mutate(\n    biden_pct = janitor::round_half_up(biden / total_votes_2021_prez * 100, 2),\n    trump_pct = janitor::round_half_up(trump / total_votes_2021_prez * 100, 2)\n  )\n\nhead(prez_2020)\n\n# A tibble: 6 × 6\n  locality         biden trump total_votes_2021_prez biden_pct trump_pct\n  <chr>            <dbl> <dbl>                 <dbl>     <dbl>     <dbl>\n1 Accomack County   7578  9172                 16962      44.7      54.1\n2 Albemarle County 42466 20804                 64657      65.7      32.2\n3 Alexandria City  66240 14544                 82508      80.3      17.6\n4 Alleghany County  2243  5859                  8203      27.3      71.4\n5 Amelia County     2411  5390                  7893      30.6      68.3\n6 Amherst County    5672 11041                 17005      33.4      64.9"
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#reshaping",
    "href": "01_virginia_election_project_datawrangling.html#reshaping",
    "title": "Virginia Election Project",
    "section": "Reshaping",
    "text": "Reshaping\nEnter pivot_wider().\nWe’ll get rid of everything we don’t need first.\n\ngov_2021 <- gov_2021 %>% \n  filter(ballot_name %in% c(\"Glenn A. Youngkin\", \"Terry R. McAuliffe\")) %>% \n  select(-locality_code,\n         -political_party)\n  \ngov_2021\n\n# A tibble: 266 × 4\n   locality_name    ballot_name        votes percentage\n   <chr>            <chr>              <int> <chr>     \n 1 ACCOMACK COUNTY  Glenn A. Youngkin   7878 61.08%    \n 2 ACCOMACK COUNTY  Terry R. McAuliffe  4948 38.37%    \n 3 ALBEMARLE COUNTY Glenn A. Youngkin  19141 37.21%    \n 4 ALBEMARLE COUNTY Terry R. McAuliffe 31919 62.05%    \n 5 ALEXANDRIA CITY  Glenn A. Youngkin  14013 24.02%    \n 6 ALEXANDRIA CITY  Terry R. McAuliffe 43866 75.20%    \n 7 ALLEGHANY COUNTY Glenn A. Youngkin   4530 74.52%    \n 8 ALLEGHANY COUNTY Terry R. McAuliffe  1518 24.97%    \n 9 AMELIA COUNTY    Glenn A. Youngkin   4720 74.19%    \n10 AMELIA COUNTY    Terry R. McAuliffe  1617 25.42%    \n# … with 256 more rows\n\n\nNow we’ll do the spreading out to reshape.\n\ngov_2021_wide <- gov_2021 %>% \n  pivot_wider(names_from = ballot_name, values_from = c(votes, percentage))\n\ngov_2021_wide\n\n# A tibble: 133 × 5\n   locality_name     `votes_Glenn A. Youngkin` votes_Terry R. …¹ perce…² perce…³\n   <chr>                                 <int>             <int> <chr>   <chr>  \n 1 ACCOMACK COUNTY                        7878              4948 61.08%  38.37% \n 2 ALBEMARLE COUNTY                      19141             31919 37.21%  62.05% \n 3 ALEXANDRIA CITY                       14013             43866 24.02%  75.20% \n 4 ALLEGHANY COUNTY                       4530              1518 74.52%  24.97% \n 5 AMELIA COUNTY                          4720              1617 74.19%  25.42% \n 6 AMHERST COUNTY                         9731              3897 71.00%  28.43% \n 7 APPOMATTOX COUNTY                      5971              1438 80.26%  19.33% \n 8 ARLINGTON COUNTY                      21548             73013 22.63%  76.67% \n 9 AUGUSTA COUNTY                        26196              7231 77.93%  21.51% \n10 BATH COUNTY                            1539               396 79.04%  20.34% \n# … with 123 more rows, and abbreviated variable names\n#   ¹​`votes_Terry R. McAuliffe`, ²​`percentage_Glenn A. Youngkin`,\n#   ³​`percentage_Terry R. McAuliffe`\n\n\nNice.\nThis is giving us some pretty long column names. we can change them after the fact using rename(). But first let’s clean the names to make it easier.\n\ngov_2021_wide <- gov_2021_wide %>% \n  clean_names()\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    votes_glenn_a_youngkin votes_terry_r_mc_aul…¹ perce…² perce…³\n  <chr>                             <int>                  <int> <chr>   <chr>  \n1 ACCOMACK COUNTY                    7878                   4948 61.08%  38.37% \n2 ALBEMARLE COUNTY                  19141                  31919 37.21%  62.05% \n3 ALEXANDRIA CITY                   14013                  43866 24.02%  75.20% \n4 ALLEGHANY COUNTY                   4530                   1518 74.52%  24.97% \n5 AMELIA COUNTY                      4720                   1617 74.19%  25.42% \n6 AMHERST COUNTY                     9731                   3897 71.00%  28.43% \n# … with abbreviated variable names ¹​votes_terry_r_mc_auliffe,\n#   ²​percentage_glenn_a_youngkin, ³​percentage_terry_r_mc_auliffe\n\n\nNow let’s rename, and we’ll use similar names to what we had earlier in our 2021 results.\n\ngov_2021_wide <- gov_2021_wide %>% \n  rename(\n    youngkin = votes_glenn_a_youngkin,\n    mcauliffe = votes_terry_r_mc_auliffe,\n    pct_youngkin = percentage_glenn_a_youngkin,\n    pct_mcauliffe = percentage_terry_r_mc_auliffe\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int> <chr>        <chr>        \n1 ACCOMACK COUNTY      7878      4948 61.08%       38.37%       \n2 ALBEMARLE COUNTY    19141     31919 37.21%       62.05%       \n3 ALEXANDRIA CITY     14013     43866 24.02%       75.20%       \n4 ALLEGHANY COUNTY     4530      1518 74.52%       24.97%       \n5 AMELIA COUNTY        4720      1617 74.19%       25.42%       \n6 AMHERST COUNTY       9731      3897 71.00%       28.43%       \n\n\nBingo.\nThere’s still one potential issue here. Can you see it?\nThe percentage columns are actually text values, not numbers. And they have that % sign in the text too. Let’s fix that using a handy function from the readr package, parse_number().\n\ngov_2021_wide <- gov_2021_wide %>% \n  mutate(\n    pct_youngkin = readr::parse_number(pct_youngkin),\n    pct_mcauliffe = readr::parse_number(pct_mcauliffe)\n  )\n\nhead(gov_2021_wide)\n\n# A tibble: 6 × 5\n  locality_name    youngkin mcauliffe pct_youngkin pct_mcauliffe\n  <chr>               <int>     <int>        <dbl>         <dbl>\n1 ACCOMACK COUNTY      7878      4948         61.1          38.4\n2 ALBEMARLE COUNTY    19141     31919         37.2          62.0\n3 ALEXANDRIA CITY     14013     43866         24.0          75.2\n4 ALLEGHANY COUNTY     4530      1518         74.5          25.0\n5 AMELIA COUNTY        4720      1617         74.2          25.4\n6 AMHERST COUNTY       9731      3897         71            28.4\n\n\nPerfect. Problem solved."
  },
  {
    "objectID": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "href": "01_virginia_election_project_datawrangling.html#comparing-gov-vs.-prez-results",
    "title": "Virginia Election Project",
    "section": "Comparing gov vs. prez results",
    "text": "Comparing gov vs. prez results\nNow that things are join, let’s actually go ahead and start making columns to compare the two elections and how the candidates did this time compared with last time.\nWhere should we go from here….?"
  },
  {
    "objectID": "academicpaper.html",
    "href": "academicpaper.html",
    "title": "Film Analysis Paper",
    "section": "",
    "text": "This paper analyzes The Help and it’s interaction with politics and surveillance, bringing in various pieces of previous film analysis literature as backing to the arguments.\n\nMothers and Maids in Mississippi:\nA Scholarly Investigation of Surveillance and Discipline in The Help\nIn many societies, politics submits itself to the private sphere when surveillance and the watchful gaze exerts power over its subject. Further, by the phrase ‘private sphere’, it is merely the fact that surveillance over the individual is arguably only in their sphere of knowledge, their own internal spaces causing the individual to become disciplined. It can be thought of, also, that this discipline can be indirectly racist. There seems to be no escape from the discriminatory, normalized behavior that is embedded in this gaze. The film The Help reveals this problem. In Jackson, Mississippi circa 1963, recent graduate and aspiring journalist, Skeeter, has intentions of revealing the real lifestyle of African American maids for southern housewives. I will be arguing that the actions of society in the Jim Crow South act as a surveilling gaze and contribute to an internal discipline of the characters seen in the film. This essay will reveal that due to political life in the 1960s Jim Crow era being focused privately, on the individual, and due to the fact that the racist actions of the South embody a watchful gaze and prove to be a surveilling villain, it takes certain characters to act out with strength and resilience to overcome this political problem. With Foucault’s reasoning in The Foucault Reader, The Help provides a critique of his arguments by revealing the absence of intentional racial discipline and in combination with Anker’s explanation of a racially driven melodrama in Orgies of Feeling, The Help upholds her reality of purposeful racism through the use of melodramatic elements and roles.\nPolitical life in the 1960s Jim Crow era extends all the way into the individual, specifically highlighted in The Help and their personal sphere. Segregation in the South was normal and to be inherently racist was fitting, for most. Throughout the film, looking through a melodramatic lens, it is brought to attention that the black race and in specific, the two main maids, Aibileen and Minny are deemed the villain and the cause of all that is wrong with society. This is clearly highlighted through the actions and reactions of Hilly, the main housewife. For instance, during their ladies luncheon, Hilly refuses to go to the bathroom because Aibileen uses it as well. She explains, “They carry different diseases than we do”. Hilly and the rest of her possy claim the role of the victim, when in reality they are the villain. Even clearer and more dramatic is the scene in which Minny desperately expresses her need to use the bathroom due to a dangerous storm outside. Despite Hilly’s discontent, Minny uses it anyways and is fired on the spot. These housewives in Jackson represent a clearly racialized society. In her book Orgies of Feeling, author Anker writes about how the roles of the victim and villain can be racialized. She states, “The national identity constructed out of melodrama can thus elide the unequal realms of freedom as they are lived in the daily particulars of American lives marked by economic disempowerment, racialized exploitation, and unequal access to power” (Anker 87). In addition to a discriminatory and therefore problematic setting in The Help, the society extends to the individual and their personal life as well. For instance, this is seen in the life of Aibileen. When she sits down with Skeeter to be interviewed for the story, she explains how this lifestyle and being a black woman in Mississippi caused the death of her son. Aibileen remarks, “Anniversary of his death: Every year I can’t breathe. But to y’all it’s just another day of bridge. If you stop [writing] this, everything he was gonna die with him”. The gaze roots itself within the individual on a personal level, affecting their actions and emotions, as seen in the film. Similarly, the majority of the scenes from The Help are located in households: bedrooms, kitchens, backyards, and dining rooms. Furthermore, this deliberacy could arguably be a reflection of the notion of racism in the private sphere of individuals. This metaphorical aspect of the film enhances the point to its full capacity. The household setting is meant to direct the gaze and surveillance into the characters’ personal lives.\nWith the notion that in The Help, politics are indirectly forced upon individuals and their private lives, it can be advanced further to point out that the discriminatory and normalized actions in Mississippi embody a watchful gaze that disciplines it’s subjects. In his book, The Foucault Reader, philosopher Michael Foucault posits, “Disciplinary power, on the other hand, is exercised through its invisibility; at the same time it imposes on those whom it subjects a principle of compulsory visibility… Their visibility assures the hold of the power that is exercised over them (Foucault 199). Often times, the subjects aren’t aware that the gaze and therefore discipline is even there. It becomes”normalized”. This is true in The Help through the behavior of Hilly and the other wives. However, Foucault’s reasoning can be critiqued in so far that he excludes the role that racism and discrimination can play in this scenario. He writes, “The perpetual penalty that traverses all points and supervises every instant in the disciplinary institutions compares, differentiates, hierarchizes, homogenizes, excludes. In short, it normalizes” (195). On the one hand, Foucault’s thought is synonymous with the film. But, on the other hand, he disregards the fact that the differentiation, hierarchy, and exclusion can have negative connotations and implications as seen in the film. Moreover, the dominating, overseeing gaze is problematic when it gets to be controlled by racist masses that inherently discipline its [white] subjects to think in a discriminatory way. Also, it becomes problematic when it disciplines it’s black subjects to think that they are always inferior to the white race. Perhaps Foucault was sincerely not aware and therefore didn’t mention race’s role in his argument. But, for the sake of this paper, it is important to highlight its importance and problematic implications. The film makes it very clear that this type of discipline infests itself in its variety of subjects. For instance, as Minny and her daughter walk to work, she lists off everything she must do as a young maid. Minny exclaims, “You cooking white food? You taste it with a different spoon. When you serving white folks coffee, put it down in front of them, don’t hand it to them cause your hands can’t touch”. It is the power of the society that is causing Minny to think and act in this way. As Foucault puts it, “In short, this power is exercised rather than possessed; it is not the”priviledge,” acquired or preserved, of the dominant class, but the overall effect of its strategic positions–an effect that is manifested and sometimes extended by the position of those who are dominated” (174). Another prime example in the film that displays this type of discipline reversely is in the scene in which Hilly’s maid, Yule Mae politely asks Hilly and her husband to help cover a small part of tuition for her son. She explains she would take more pay as a loan and work it off overtime. Immediately after asking, Hilly’s husband says as he fakes to check his watch, “I am late. I gotta get going” and leaves the house. Afterwards, Hilly denies Yule the money and blames it on her being a “good Christian”. In theory, it is the same watchful force exerting power over both Hilly and Minny in these situations but they are under different disciplines under a racist lens. Nonetheless, these two types are extremely prevalent in The Help and cause a large, ethical problem.\nFoucault states, “But the body is also directly involved in a political field; power relations have an immediate hold upon it; they invest it, mark it, train it, torture it… to emit signs” (Foucault 173). Arguably, this power exerts itself on racialized subjects. In response to a racially flawed gaze and power, certain people, arguably coined ‘heros’ stand out and act against the inherent discipline to follow the norm. Anker argues that melodrama often combines the victim with the hero. And although the roles of the victim, villain, and hero are switched around, this phenomenon is reflected in the ending scene of the film. In the end, the story makes the audience feel as though Aibileen, Minny, and Skeeter are originally victimized but in the end, are meant to be seen as heroes, defeating the racism in their own respects. For one, Skeeter embodies the “outcast” in the film as she is consciously aware of the blatant racism going on in her midst. Moreover, she is seemingly the only one who recognizes it. This gives her willingness to write a book on all of the maid’s experiences, the good and the bad. She compiles all of them in a book title The Help. Skeeter must be pointed out as a hero of the film due to her bravery to publish something so taboo for its time. An example of this is in the luncheon scene. Hilly is explaining how there must be a separate bathroom for the colored help. The film angles of this scene in particular and the expressions of Skeeter reveals her growing discontent with this society. As a response, Skeeter answers, “Maybe we should just build you a bathroom outside”. Skeeter also reveals her unique and arguably heroic personality when she explains to Aibileen and Minny the purpose of her writing The Help. She says, “I want to show her perspective, so people might understand what it’s like from your side”. Perhaps Skeeter’s background of having a maid, Constantine, who assumed the role of her mother contributes to the motivations of her character. But, nonetheless, Skeeter exemplifies a hero in The Help and confirms Anker’s expression of melodramatic roles. Additionally, in the closing scene, Aibileen returns to her white family and finds Hilly accusing her of stealing pieces of silver. Though she didn’t touch it, Hilly and Elizabeth (mother that Aibileen works for) place the blame on her and she is unjustly fired on the spot with threats of calling the police. Aibileen works up the nerve to stand up for herself against Hilly. Angrily yet powerful, she says, “All you do is scare and lie to get what you want. You’re a godless woman. Ain’t you tired Miss Hilly?”. Aibileen’s character represents someone willing to stand up against the racist masses, led by Hilly in the film. In this scene, she is solving this political problem of racially driven surveillance and discipline and the consequential inequality and violence that comes with it. The film ends with her walking away from her white family. She quotes, “No one had ever asked me what it feels like to be me. Once I told the truth about that, I felt free”. Aibileen demonstrates a victim turned hero; a hero for herself and for every person who has been in the situation she had been in; a hero that society needed, even though it believed otherwise. Perhaps breaking free to regain the political power that was once taken away or arguably never given, is the way in which people solve this problem both personally and socially.\nIn conclusion, the goal of this essay was to reveal the problem that political power is often exerted on subjects in the private sphere and in many instances, pose racist sexist threats to their selective subjects specifically seen in The Help. Furthermore, the power is often exerted by a ‘watchful gaze’, known as society of the Jim Crow South as its subjects are surveilled through a racist lens and in turn, creates an inherent discipline within the people. Power exerted through the private sphere simply refers to the gaze over an individual’s personal lives. This creates a problem that can be arguably solved/responded to by the right subject. And, in the case of The Help, it is with the actions of Skeeter, Minny, and Aibileen on the discrimination in Jackson, Mississppi circa 1963. Through highlighting Anker’s argument of race in melodrama as well as critiquing Foucault’s idea of surveillance and discipline, these three components of the overall political problem are brought together in partnership with The Help."
  },
  {
    "objectID": "featurearticle.html",
    "href": "featurearticle.html",
    "title": "News Feature",
    "section": "",
    "text": "This article features various interviews with the creators and moderators of the group. Their insights provide a glimpse into the work and dedication of finding New Jersey citizens the resources to get the shot.\n\nNot All Heroes Wear Capes\nThe pandemic was a struggle for so many, taking shape in many forms: loved ones lost, plans turned upside down, futures in shambles, and anxieties through the roof. The state of New Jersey saw a total of approximately 871,333 COVID-19 cases and 22,904 deaths since the start in March 2020 (NJ Health). First glimpses of COVID-19 vaccinations were a symbol of hope; hope for the future and for a return to normalcy. States all across the country were confronted with the important task of managing vaccine rollout in their own communities. Rollout plans were strictly enforced by the federal government and managed by state governments, with each state determining different eligibility levels at different times. Vaccine distribution sites came in the form of chain and local pharmacies, popular venue areas, and hospital clinics. Yet there was another layer of this vaccination chaos: communication about where, when, who, and how could you receive the vaccine. Rightly so, doctors, nurses, and frontline workers are praised as heroes. At the same time, there are other heroes that deserve just as much praise. Because social media became people’s main source of contact during quarantine, sites such as Facebook, Twitter, and Instagram evolved into platforms where members of communities could have open discussions about vaccines. At least that is what Brandi, 27, and Brittany Prell, 33, of Bergen County, NJ believed and is ultimately what motivated them to create a group for New Jersey.\nThe Prell sisters got the idea to create the New Jersey Covid Vaccine Info Facebook group when the pandemic changed their grandmother’s usual plan to spend half of the year in South Florida and in New Jersey. Instead of returning home to New Jersey in April 2020, their grandmother stayed in South Florida and the Prell sisters went the longest they’ve ever gone without seeing her. Brandi explained that after struggling to find a vaccine for their grandmother, Brittany turned to Facebook. Lo and behold, there was a South Florida Vaccine Info group that secured her grandmother a vaccine appointment within days. Brandi said this was the catalyst for creating a similar group for New Jersey. “We thought it would be 100-200 people of family and friends, but it just went crazy,” said Prell. The New Jersey Covid Vaccine Info Facebook group now has approximately 137,540 members since they created it on January 15 2021 (Facebook).\nThe group is administered by both Brandi and Brittany Prell with around 25 moderators who monitor the group activity. Early on, both sisters agreed they could not handle this group on their own. The Prells initially selected a few moderators, members who showed the most frequent activity. “From there, more people wanted to help, so that’s how all of our moderators came to be,” mentioned Brandi Prell. She said that most members of the group joined with the goal of securing a vaccine appointment. Sandy Thompson, 37, is a resident of Morris County who, like most, heard about the group by word of mouth when she wanted to find appointments for her aunt. She recalls that after booking the appointment about a week later, she stayed in the group as a member and “got caught up in it all.” Thompson speaks for many explaining, “you book one person and all of a sudden you’re getting requests for another 10 to 15 within a matter of a few hours.” After her active role in the group, the admins asked her to become a moderator.\nNot all members came to the group just to find appointments. Abby Cardinale, 32, a moderator from Central Jersey participated in a Pfizer vaccination trial in early October 2020. Cardinale explained how her interest in knowing more about the COVID-19 vaccine prompted her to join the trial. “I was pretty sure I got the real thing from the side-effects. I had the response that was on the more obvious side of things,” said Cardinale. She immediately joined a Facebook group for trial participants as a way to share information between those in very similar situations about experiences undergoing the trial; a “precursor” group to the New Jersey Covid Vaccine Info group. Cardinale wasn’t the only one with this story. Casey Chandler, 60, of Union County, NJ is a current member of the NJ Covid Vaccine Info group. Just like Cardinale, she got involved after joining a vaccine trial for Johnson and Johnson. Chandler heard about this opportunity from none other than a Facebook advertisement. The J and J trial began for Chandler in March 2021. She received her first shot for the trial just one day before she became eligible for the real vaccine. When J and J told Chandler she could drop out of the trial and get the real deal shot, she declined because she felt that the trial was too important to give up. The trial motivated Chandler to become a member of the NJ Covid Vaccine Info group.\nOver the last month, the group saw a total of 7,365 posts. In just one day, the group typically sees up to 100 or more posts (Facebook). Posts consist of anything ranging from asking for assistance in booking an appointment to questions about when certain pharmacies open availability for vaccines. Evie Jackman Davis, 72, is a member of the NJ Covid Vaccine Info group from Rockland County, NY. She learned about the NJ vaccine appointment system when she began searching for appointments for her son and daughter-in-law. For a long period of time, CVS dropped large numbers of appointments around 4:30am each day. CVS switched the appointment drop to the “more civilized” time of midnight each night. When appointments are released, spots fill up immediately, so timing is critical.\nMembers quickly learned a trick to work around this issue. “It was a back door way to get into the site,” said Davis as she described the strategic way to get an appointment. “You couldn’t just click on New Jersey because it would always say no appointments were available, but if you went in through some other obscure state like Louisiana, they were always available,” explained Davis. Once reaching this step, the site asks for the state once again. Now entering New Jersey and a specific zip code would open up hundreds of appointments to select. According to Davis, this method was by far the easiest way to book an appointment. Those who knew this type of information, like Davis, were blasting it in posts to the Facebook group, helping hundreds of thousands make appointments.\nDavis pointed out that in her home state of New York the process is significantly easier compared to New Jersey. New York has a one-stop-shop website made by the state that people can use to look for appointments. New Jersey doesn’t have anything like that and it is much more fragmented, making it harder to navigate. In New Jersey, a resident has to live in a certain county to make their appointment. New York is clearly a different story despite the proximity of both states. “You don’t have to live in Rockland County. All you need is to have New York state residency and be qualified. In New Jersey, I’m just not finding that,” commented Davis. She emphasized that due to these circumstances, the NJ Covid Vaccine Info group was crucial because it modeled that one-stop-shop site from New York. It was a place where anyone could ask for information, and within minutes a member would respond to help.\nA group of this size is hard to control with just two administrators and 25 moderators. Rules and regulations must be enforced and followed in order to avoid uncontrollable comment threads and posts that are irrelevant to the main goal of the group. Christine Shenkman, 43, from Ocean County is another moderator for the NJ Covid Vaccine Info group. Shenkman shared her experience with another Facebook group she had been a member of with very similar goals of booking appointments and vaccine announcements in NJ. According to Shenkman, the group didn’t have “nearly the overall structure” of the NJ Covid Vaccine Info group. She left the group because of unnecessary drama and a lack of control. Shenkman thinks the NJ Covid Vaccine Info group’s intent should be “keep the riff-raff to a minimum, keep the politics out, and talk solely about direct access and support.” She came to this conclusion after memes were carelessly posted in the early stages of the group. “We had to immediately reel that in because you’d have some of the elder community write back saying ‘you think death is funny?’ and get very angry,” recalled Shenkman as she reported on the backlash received by many members. This era of the group was short-lived, as Shenkman, Prell, and others set some guidelines for group material, sticking to the main goal of having a “central location of information.” (Prell)\nA quick search won’t find any groups for those against the vaccine in NJ. This doesn’t mean there aren’t people with those values in the state. The New Jersey Coalition for Vaccination Choice is a group that advocates against mandatory vaccinations. While the COVID-19 vaccine is not mandatory, the coalition’s website does include an entire section about the COVID-19 vaccine. Here, the coalition provides links to statistics on vaccine deaths, updates on the enforcement of the vaccine from different businesses, and more.\nLikewise, New Jersey gym owner Ian Smith from The Atilis Gym in Bellmawr tweeted in March 2021 that the gym would be giving out free memberships to those who didn’t get vaccinated. In his tweet, Smith wrote, “we believe in health - the real way - exercise, good diet, plenty of Vitamin D, Zinc, and an environment to destress.” (Twitter). The same gym was previously fined over $1.2 million for violating COVID-19 lockdown orders (NY Post).\nIt is apparent that the members and moderators of the NJ Covid Vaccine Info Facebook group all support the vaccine. After all, the group wouldn’t exist if they did not. Everyone has a different story and connection to the virus, yet all members share the same mentality on the vaccine. Chandler, for example, has a 27-year-old son in a nursing home because he is both mentally and physically disabled. He contracted COVID-19 twice, fortunately recovered, and is now fully vaccinated by his nursing home. “[The vaccine] is going to lead us out of what has been a nightmarish 13 months,” commented Chandler.\nCurrently, there are 3,054,030 fully vaccinated people (NJ Health). Many moderators are parents and believe the vaccine is a crucial step in ensuring the safety of their children and family. “I got vaccinated because my child can’t. I’m going to do whatever I can to keep them safe and to get them back to their normalcy,” said Thompson. Cardinale added “until we can protect them directly, it is our responsibility to protect everybody indirectly as well.” Prell offered her input detailing her job as a teacher for the deaf and hard of hearing in NYC. “One person can make a difference, so if everyone can just get a shot, that can stop it for so many people,” Prell communicated.\nIt is extremely difficult to keep track of just how many appointments have resulted from the group’s efforts. There are simply too many to count. Davis explained that while she has only made around 50 appointments, there are other members making over hundreds of appointments. “It’s all they do, day and night,” she notes. “For the first time in a year, I didn’t feel like a victim. I didn’t feel helpless. I felt like we were fighting back and that we could win.” This is how she described the group as a whole. According to Davis, people would stay up all night long helping “total strangers” find appointments. No one is receiving paid compensation for the work that they do, even though they deserve it. People spend their entire work days hunting for vaccines not just for themselves, but for others. The group is a “godsend,” according to Davis.\nWhen asked the question, “if you could describe this Facebook group in one word, what would it be?”, admin of the group, Prell firmly stated, “helpful.” The moderators answered with words like “empowering,” “incredible,” and “life-saving.” What do all of these words have in common? They are all words used to describe heroes, and this group is filled with them."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Anneliese Forlenza",
    "section": "",
    "text": "Hi, welcome to my page! I’m originally from New Jersey and am currently a senior at George Washington University in Washington, D.C. I’m studying communication, journalism, and political science and I’m graduating this December."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Anneliese Forlenza",
    "section": "Education",
    "text": "Education\nGeorge Washington University"
  },
  {
    "objectID": "index.html#work-experience",
    "href": "index.html#work-experience",
    "title": "Anneliese Forlenza",
    "section": "Work Experience",
    "text": "Work Experience\nEvins Communications\nGW-TV\nThe House of Representatives\nAllendale Bar and Grill"
  },
  {
    "objectID": "index.html#skills",
    "href": "index.html#skills",
    "title": "Anneliese Forlenza",
    "section": "Skills",
    "text": "Skills\nSocial Media Development\nPublic Relations\nWriting\nInterpersonal Communication"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Here I’m sharing my skills, background, and previous work in a mass portfolio for you all to learn from.\nShoutout to Professor Kessler for a great class and helping me develop my R & Github skills!"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "My Portfolio",
    "section": "",
    "text": "Howard Schneider Serves As Wise Voice For Fake News Phenomena\nAn article featuring the Executive Director of the Center for News Literacy and a nationally-known expert on political communication in this era of fake news and misinformation. Read more to hear Schneider’s stance on misinformation in this modern age.\n\nTurning Waste Into Wonderful\nA science essay featuring Cuban costume designer, Celia Ledon, and her installation called The Shape of Water which aims to spread awareness about plastic waste. Her work will be on display at The Kennedy Center’s RiverRun Festival in April 2023. Read more to hear how GW students are involved in this effort.\n\nGender Wage Gap Memo\nA legislative memo written to Representative Josh Gottheimer (D-NJ) detailing the pressing issue surrounding the gender wage gap, gender parity, and overall women’s rights in the workplace. Read more to learn about my recommendations to the Congressman and the House of Representatives."
  },
  {
    "objectID": "walkthrough.html",
    "href": "walkthrough.html",
    "title": "GA Election Walkthrough and Annotation",
    "section": "",
    "text": "We’ll start by loading our libraries.\nNext, we’ll import the Georgia election data for this project and then create two data sets for both the senate and governor results.\nIn order to separate the GA results into senate and governor data, we can use the read_excel function to call the ga_votes excel document into R. Then, we’ll use “sheet =” to call each sheet in the excel document. In this case, we had two: senate and governor.\nNote: you must rename the new data set in order to run the code. You’ll need to do this for each new dataset you want to make in this project :)\n\n\nCode\n#GA senate\nsenate_results <- read_excel(here(\"ga_votes.xlsx\"), sheet = \"senate\")\n\n#GA governor\ngovernor_results <- read_excel(here(\"ga_votes.xlsx\"), sheet = \"governor\")\n\n\nNext, we’ll make a column chart that shows how many counties the Republican candidate did better vs. worse than Trump in the Senate race.\nTo make a column chart in R, you’ll need to use the ggplot function (our friend the tidyverse package includes ggplot, so we’re set). Within ggplot, you’ll first put the dataset you want to work from. In our case, it is senate results. Next, you’ll use “aes” to input your x and y axes. For this chart, “county” is our x and since we are looking at where the Republican candidate did better/worse than Trump, y will be the column “pct_r_above_trump”.\nTo spice up the chart, we’ll add some labels for the axes and overall chart. To do this, you’ll use the scale_y_continous function to create a y-axis label. Simply fill the function with name = “your desired label” and then add labels = scales::comma (separate by a comma). This particular addition essentially just separates the thousands with commas to help with the magnitude of numbers in the data.\n*You can see code below for what I chose to label the axes.\nFor the x-axis label, you’ll use the scale_x_discrete function and simply fill the function with name = “your desired label”.\nLastly, for an overall label for the chart, you’ll use the labs function and simply fill the function with name = “your desired label”.\nDON’T SKIP: Lastly, using + (which you’ve seen you need to use to separate each line of code), add geom_col(). This is crucial as it tells the ggplot function that you want to create a column/bar chart!\n\n\nCode\nggplot(senate_results, aes(x=county, y=pct_r_above_trump)) +\n  scale_y_continuous(name = \"Republican Candidate Compared to Trump Percent\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Republican Candidate Compared to Trump Results in Georgia Senate Race\") +\n  geom_col()\n\n\n\n\n\nNow, we’ll make a column chart that shows how many counties the Republican candidate did better vs. worse than Trump in the Governor race.\nREFER TO ANNOTATIONS FOR THE PREVIOUS CODE. REPLICATE FOR GOVERNOR RESULTS.\n\n\nCode\nggplot(governor_results, aes(x=county, y=pct_r_above_trump)) +\n  scale_y_continuous(name = \"Republican Candidate Compared to Trump Percent\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Republican Candidate Compared to Trump Results in Georgia Governor Race\") +\n  geom_col()\n\n\n\n\n\nFor the Senate race, we’ll create a chart that shows the top 10 biggest drops between the Republican candidate and Trump.\nWe’ll need to get our data organized in order to show the top 10 biggest drops between the Republican candidate and Trump. To do this, we’ll take our senate results data set and use the arrange function to sort the “pct_r_above_trump” column from largest to smallest. For this, you’ll need to include desc(pct_r_above_trump) in the arrange function. Desc will order it from largest to smallest, or rather, descending order. You’ll also want to use the head function and input 10. This will make sure you’re only seeing the top 10 counties.\nNote: for these functions, you’ll need to separate each line of code with a pipe (%>%).\nNext, rename this “updated” data as something more specific to what we just did. You can do this by using an left arrow (<-) pointing to your new desired name for the data. Here, I called it new_senate_results.\nGreat! Now we’re ready to make the column chart.\nTo make a column chart in R, you’ll need to use the ggplot function. Within ggplot, you’ll first put the dataset you want to work from. In our case, it is the new senate result data set we just created. Next, you’ll use “aes” to input your x and y axes. For this chart, “county” is our x and since we are looking at where the Republican candidate did better/worse than Trump, y will be the column “pct_r_above_trump”. Within aes, we will reorder the x axis so that the results are ordered from most to least in the chart.\nTo spice up the chart, we’ll add some labels for the axes and overall chart. To do this, you’ll use the scale_y_continous function to create a y-axis label. Simply fill the function with name = “your desired label” and then add labels = scales::comma (separate by a comma). This particular addition essentially just separates the thousands with commas to help with the magnitude of numbers in the data.\n*You can see code below for what I chose to label the axes.\nFor the x-axis label, you’ll use the scale_x_discrete function and simply fill the function with name = “your desired label”.\nLastly, for an overall label for the chart, you’ll use the labs function and simply fill the function with name = “your desired label”.\nDON’T SKIP: Lastly, using + (which you’ve seen you need to use to separate each line of code), add geom_col(). This is crucial as it tells the ggplot function that you want to create a column/bar chart!\n\n\nCode\nnew_senate_results <- senate_results %>%\n  arrange(desc(pct_r_above_trump)) %>%\n  head(10)\n\nggplot(new_senate_results, aes(x= reorder(county, -pct_r_above_trump), y=pct_r_above_trump)) +\n  scale_y_continuous(name = \"Republican Candidate Compared to Trump Percent\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Top 10 GA Counties With Biggest Drops Btwn Republican Candidate Compared to Trump\") +\n  geom_col()\n\n\n\n\n\nFor the Senate race, let’s also make a chart that shows the top 10 counties highest margins of victory for the Democratic candidate. Note: for this, you’ll need to calculate the margin of victory for each county. This is shown below.\nFirst, to calculate the margin of victory (MOV) for each county, subtract pct_r_2022 from pct_d_2022. Then, to these new calculations as a new column in the data set, use the mutate function. Inside, put your desired column name (I used “MOV”) = the calculation. Give this “updated” data set a new, more specific name using the instructions in the previous annotations.\nNow that we’ve done that step, let’s reorganize the data how we want it. To do this, we’ll take our new data set and use the arrange function to sort the “MOV” column from largest to smallest. For this, you’ll need to include desc(MOV) in the arrange function. Desc will order it from largest to smallest, or rather, descending order. Once again, rename this new data set. You’ll also want to use the head function and set it to 10, using a comma to indicate that. Once again, rename that newly updated data.\nGreat. We’re ready to turn it into a column chart…\n*REPLICATE PREVIOUS GGPLOT INSTRUCTIONS TO MAKE A NEW COLUMN CHART WITH PROPER LABELS.\n\n\nCode\nMOV_data <- senate_results %>% \n  mutate(MOV = (pct_d_2022 - pct_r_2022))\n\nMOV_data_senate <- MOV_data %>% \n  arrange(desc(MOV))\n\ntop_ten_MOV <- head(MOV_data_senate, 10)\n\nggplot(top_ten_MOV, aes(x = reorder(county, -MOV), y = MOV)) +\n  scale_y_continuous(name = \"Margin of Victory\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Top 10 GA Counties With Highest Margin of Victories Btwn Democrat & Republican Candidates for Senate\") +\n  geom_col()\n\n\n\n\n\n5)\nNext, for the Governor race, let’s also make a chart that shows the top 10 counties highest margins of victory for the Democratic candidate. Note: for this, you’ll need to calculate the margin of victory for each county. This is shown below.\n*APPLY ABOVE ALL ANNOTATIONS AND REPLICATE FOR GOVERNOR RACE RESULTS\n\n\nCode\nMOV_data_two <- governor_results %>% \n  mutate(MOV_gov = (pct_d_2022 - pct_r_2022))\n\nMOV_data_governor <- MOV_data_two %>% \n  arrange(desc(MOV_gov))\n\ntop_ten_MOV_gov <- head(MOV_data_governor, 10)\n\nggplot(top_ten_MOV_gov, aes(x = reorder(county, -MOV_gov), y = MOV_gov)) +\n  scale_y_continuous(name = \"Margin of Victory\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Top 10 GA Counties With Highest Margin of Victories Btwn Democrat & Republican Candidates for Governor\") +\n  geom_col()\n\n\n\n\n\nNow let’s have some fun and make some maps!\nTo start, we’ll use the tigris package to download a geospatial/map dataset with the county boundaries for Georgia. As always, you’ll need to rename this new, specific dataset.\n\n\nCode\ncounties_geo <- tigris::counties(state = \"GA\", resolution = \"20m\", cb = TRUE)\n\n\nRetrieving data for the year 2020\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |==                                                                    |   3%\n  |                                                                            \n  |===                                                                   |   4%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |=====                                                                 |   7%\n  |                                                                            \n  |======                                                                |   8%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |========                                                              |  12%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |============                                                          |  17%\n  |                                                                            \n  |=============                                                         |  19%\n  |                                                                            \n  |===============                                                       |  22%\n  |                                                                            \n  |================                                                      |  23%\n  |                                                                            \n  |==================                                                    |  26%\n  |                                                                            \n  |====================                                                  |  28%\n  |                                                                            \n  |=====================                                                 |  31%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |==========================                                            |  37%\n  |                                                                            \n  |===============================                                       |  44%\n  |                                                                            \n  |===================================                                   |  49%\n  |                                                                            \n  |=====================================                                 |  53%\n  |                                                                            \n  |=======================================                               |  55%\n  |                                                                            \n  |==========================================                            |  60%\n  |                                                                            \n  |============================================                          |  63%\n  |                                                                            \n  |==============================================                        |  65%\n  |                                                                            \n  |=================================================                     |  70%\n  |                                                                            \n  |====================================================                  |  74%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |===========================================================           |  84%\n  |                                                                            \n  |=============================================================         |  87%\n  |                                                                            \n  |================================================================      |  92%\n  |                                                                            \n  |======================================================================| 100%\n\n\nNext, let’s map out the polygons of the Georgia counties.\nTo do this, use the tm_shape function to let the map know what it will include. In our case, we want to fill that function with counties_geo to display a map of all the GA counties.\nNext, using + sign, add the tm_polygon function. This will ensure that the counties are displayed as shapes.\n\n\nCode\ntm_shape(counties_geo) + \n  tm_polygons()\n\n\n\n\n\nFrom now on, we’ll use the newly created map data in counties_geo along with our election results datasets.\nNow, for the Senate race, we’ll create a choropleth map of Georgia counties that shows where the Republican candidate for Senate did better vs. worse than Trump.\nSince we have two different sets of data at the moment, we’ll want to condense the results and also make sure that the fips code/GEOID category is permanently just called “GEOID”. To do this, we’ll use the inner_join function and combine each data set (counties_geo and senate_results). We’re joining them because they share the same column of fips code/GEOID. So in this case, you’ll need to add by = c(“GEOID” = “fipsCode”) to ensure that that is the category they will be joined by. We made GEOID the primary label by placing it first in the order. Make sure to rename this new data with something unique.\nGreat work. Next, use the tmap_mode function to set the mode of the map to “plot”. This just means the map will be a static image.\nNow let’s make our map! To do this, use the tm_shape function to let the map know what it will include. In our case, we want to fill that function with our fun, new data set called senatemap.\nNext, using + sign, add the tm_polygon function. This will ensure that the counties are displayed as shapes. This time, we want to fill the function with actual criteria. Let’s use the column called is_r_above_trump which shows us where the Republican candidate for Senate did better vs. worse than Trump. You’ll also need to specify that you would like it displayed by county. To show this, add id = GEOID.\n\n\nCode\nsenatemap <- inner_join(counties_geo, senate_results, by = c(\"GEOID\" = \"fipsCode\"))\n\ntmap_mode(mode = \"plot\")\n\n\ntmap mode set to plotting\n\n\nCode\ntm_shape(senatemap) +\n  tm_polygons(\"is_r_above_trump\", id = \"GEOID\")\n\n\n\n\n\nNext, for the Governor race, we’ll create a choropleth map of Georgia counties that shows where the Republican candidate for Senate did better vs. worse than Trump.\n*APPLY ABOVE ALL ANNOTATIONS AND REPLICATE FOR GOVERNOR RACE RESULTS\n\n\nCode\ngovmap <- inner_join(counties_geo, governor_results, by = c(\"GEOID\" = \"fipsCode\"))\n\ntmap_mode(mode = \"plot\")\n\n\ntmap mode set to plotting\n\n\nCode\ntm_shape(govmap) +\n  tm_polygons(\"is_r_above_trump\", id = \"GEOID\")\n\n\n\n\n\nAlmost there!\nFor the Senate race, let’s create a choropleth map that shows the margins of victory for the Democratic candidate. Note: for this, you’ll need to calculate the margin of victory for each county.\nSince we have two different sets of data at the moment, we’ll want to condense the results and also make sure that the fips code/GEOID category is permanently just called “GEOID”. To do this, we’ll use the inner_join function and combine each data set (counties_geo and MOV_data_senate).\nRemember that now we’re dealing with the previous margin of victory data we created. That is why the other data set is called MOV_data_senate.\nAs a reminder, we’re joining them because they share the same column of fips code/GEOID. So in this case, you’ll need to add by = c(“GEOID” = “fipsCode”) to ensure that that is the category they will be joined by. We made GEOID the primary label by placing it first in the order. Make sure to rename this new data with something unique.\nNext, use the tmap_mode function to set the mode of the map to “plot”. This just means the map will be a static image.\nNow let’s make our map! To do this, use the tm_shape function to let the map know what it will include. In our case, we want to fill that function with our fun, new data set called MOV_senatemap.\nNext, using + sign, add the tm_polygon function. This will ensure that the counties are displayed as shapes. This time, we want to fill the function with actual criteria. Let’s use the column called is_r_above_trump which shows us where the Republican candidate for Senate did better vs. worse than Trump. You’ll also need to specify that you would like it displayed by county. To show this, add id = GEOID.\nGreat, you’re really getting it!\n\n\nCode\nMOV_senatemap <- inner_join(counties_geo, MOV_data_senate, by = c(\"GEOID\" = \"fipsCode\"))\n\ntmap_mode(mode = \"plot\")\n\n\ntmap mode set to plotting\n\n\nCode\ntm_shape(MOV_senatemap) +\n  tm_polygons(\"MOV\", id = \"GEOID\")\n\n\nVariable(s) \"MOV\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\nNow, for the Governor race, let’s create a choropleth map that shows the margins of victory for the Democratic candidate. Note: for this, you’ll need to calculate the margin of victory for each county.\n*APPLY ABOVE ALL ANNOTATIONS AND REPLICATE FOR GOVERNOR RACE RESULTS\n\n\nCode\nMOV_govmap <- inner_join(counties_geo, MOV_data_governor, by = c(\"GEOID\" = \"fipsCode\"))\n\ntmap_mode(mode = \"plot\")\n\n\ntmap mode set to plotting\n\n\nCode\ntm_shape(MOV_govmap) +\n  tm_polygons(\"MOV_gov\", id = \"GEOID\")\n\n\nVariable(s) \"MOV_gov\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n\n\n\n\n\nGREAT WORK!"
  },
  {
    "objectID": "va_election_walkthrough.html",
    "href": "va_election_walkthrough.html",
    "title": "VA Election Walkthrough and Annotation",
    "section": "",
    "text": "We’ll start by loading our libraries.\n\nComparing Virgnia Gov vs. Prez\nWelcome! We’re going to be analyzing the 2021 VA Governor race results (Youngkin - R vs. McAuliffe - D) as well as the 2020 Presidential race results (Trump - R vs. Biden - D). We’ve loaded our libraries and brought in the necessary data set from our previous script using the readRDS function. Let’s begin!\nTo kick things off, let’s create a proper table to display the data we just brought in.\nTo do this, use a pipe (%>$) to indicate that you’re using the joined_vacomparison data and then let’s use the DT::datatable function to create our table. Remember to add a filter = “top” this will allow your data table to be interactive and users can filter results from the top bar.\n\njoined_vacomparison %>%\n  DT::datatable(rownames = FALSE, filter = \"top\", \n                options = list(searching = FALSE, paging = FALSE, dom = \"tip\"))\n\n\n\n\n\n\nLooks great. Let’s move on and make a column chart to show the top 5 counties where Youngkin did better in vote percent outcomes than Trump. In other words, let’s look at how Republicans performed in governor race vs. presidential race in Virginia.\nTo start, we’ll need to calculate the difference between vote percents for Youngkin and vote percents for Trump. Using our joined_vacomparison mass data set, let’s add a column using the mutate function. Simply use mutate and fill in with your new column name = pct_youngkin - trump_pct).\nThen, we’ll use the arrange function to sort this new column called r_gov_to_pres in order from largest to smallest. For this, you’ll need to include desc(r_gov_to_pres) in the arrange function. Desc will order it from largest to smallest, or rather, descending order. Remember to lastly give it a new, unique name.\nYou’ll also want to use the head function and input the newly created data set with the new column and write , 5. This will make sure you’re only seeing the top 5 counties. Give that a new name as well.\nNow for the fun part. To make a column chart in R, you’ll need to use the ggplot function. Within ggplot, you’ll first put the dataset you want to work from. In our case, it is the new data set we just created called top_5_counties_youngkin_v_trump. Next, you’ll use “aes” to input your x and y axes. For this chart, “locality” is our x (locality is just a fancy word for county in VA) and since we are looking at how Youngkin votes compared to Trump votes, y will be the column “r_gov_to_pres”. Within aes, we will reorder the x axis so that the results are ordered from most to least in the chart.\nNext, let’s adjust the layout of the chart to be horizontal. We can do that by using the function coord_flip().\nTo spice up the chart, we’ll add some labels for the axes and overall chart. To do this, you’ll use the scale_y_continuous function to create a y-axis label. Simply fill the function with name = “your desired label” and then add labels = scales::comma (separate by a comma). This particular addition essentially just separates the thousands with commas to help with the magnitude of numbers in the data.\n*You can see code below for what I chose to label the axes.\nFor the x-axis label, you’ll use the scale_x_discrete function and simply fill the function with name = “your desired label”.\nLastly, for an overall label for the chart, you’ll use the labs function and simply fill the function with name = “your desired label”.\nDON’T SKIP: Lastly, using + (which you’ve seen you need to use to separate each line of code), add geom_col(). This is crucial as it tells the ggplot function that you want to create a column/bar chart!\n\nr_gov_to_pres_joined_vacomparison <- joined_vacomparison %>% \nmutate(r_gov_to_pres = pct_youngkin - trump_pct) %>% \n  arrange(desc(r_gov_to_pres))\n\ntop_5_counties_youngkin_v_trump <- head(r_gov_to_pres_joined_vacomparison, 5)\n\nggplot(top_5_counties_youngkin_v_trump, aes(x= reorder(locality, -r_gov_to_pres), y=r_gov_to_pres)) +\n  coord_flip() +\n  scale_y_continuous(name = \"Youngkin vs. Trump Percent Difference\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Top 5 Counties Where Youngkin Outperformed Trump\") +\n  geom_col()\n\n\n\n\nLet’s now create another column chart to see the top 5 counties with the highest Youngkin votes.\nWe will start by taking our mass data set called joined_vacomparison and use the select function to pick out the particular columns we want to use. For this analysis, we will need locality and pct_youngkin. Next, we’ll use the arrange function and sort pct_youngkin in descending order using desc. In other words, sorting from largest to smallest. Lastly, since we are looking at the top 5 counties, tag on the head function and input 5. Remember to give this new, updated data a unique name.\nGreat work. Now let’s turn it into a column chart!\nAs a reminder, to make a column chart in R, you’ll need to use the ggplot function. Within ggplot, you’ll first put the dataset you want to work from. In our case, it is the new data set we just created called top_5_youngkin. Next, you’ll use “aes” to input your x and y axes. For this chart, “locality” is our x (locality is just a fancy word for county in VA) and y will be the column “pct_youngkin”. Within aes, we will reorder the x axis so that the results are ordered from most to least in the chart.\nNext, let’s adjust the layout of the chart to be horizontal. We can do that by using the function coord_flip().\nTo spice up the chart, we’ll add some labels for the axes and overall chart. To do this, you’ll use the scale_y_continuous function to create a y-axis label. Simply fill the function with name = “your desired label” and then add labels = scales::comma (separate by a comma). This particular addition essentially just separates the thousands with commas to help with the magnitude of numbers in the data.\n*You can see code below for what I chose to label the axes.\nFor the x-axis label, you’ll use the scale_x_discrete function and simply fill the function with name = “your desired label”.\nLastly, for an overall label for the chart, you’ll use the labs function and simply fill the function with name = “your desired label”.\nDON’T SKIP: Lastly, using + (which you’ve seen you need to use to separate each line of code), add geom_col(). This is crucial as it tells the ggplot function that you want to create a column/bar chart!\n\ntop_5_youngkin <- joined_vacomparison %>%\n  select(locality, pct_youngkin) %>% \n  arrange(desc(pct_youngkin)) %>% \n  head(5)\n\nggplot(top_5_youngkin, aes(x= reorder(locality, -pct_youngkin), y=pct_youngkin)) +\n  coord_flip() +\n  scale_y_continuous(name = \"Percent Youngkin Vote\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Top 5 Counties With Highest Youngkin Votes\") +\n  geom_col()\n\n\n\n\nLet’s switch it up and make a proper data table that displays the top 5 counties with the highest votes for McAuliffe. To do this, let’s take our mass data set called joined_vacomparison and similar to the annotated walkthrough above, we can use the select function to pick out the particular columns we want to use. For this analysis, we will need locality and pct_mcauliffe. Next, we’ll use the arrange function and sort pct_mcauliffe in descending order using desc. In other words, sorting from largest to smallest. Lastly, since we are looking at the top 5 counties, tag on the head function and input 5. Remember to give this new, updated data a unique name.\nTo make the data table, we’ll use the DT::datatable function. The rest is simple. Input the new data set we just created (top_5_mcauliffe) into the function and there you have it.\n\ntop_5_mcauliffe <- joined_vacomparison %>%\n  select(locality, pct_mcauliffe) %>% \n  arrange(desc(pct_mcauliffe)) %>% \n  head(5)\n\nDT::datatable(top_5_mcauliffe)\n\n\n\n\n\n\nNow let’s have some fun and analyze some more of the data. Let’s make a column chart that shows the top 10 counties where Youngkin outperformed his opponent McAuliffe (Youngkin won the race).\nTo do this, let’s create a new column using the mutate function. This column will be named gov_r_win and will be the difference between Youngkin votes (pct_youngkin) and McAuliffe votes (pct_mcauliffe). Remember to give the new data set a unique name.\nTo organize the data how we like, we can use the arrange function and sort our new column called gov_r_win in descending order using desc. In other words, sorting from largest to smallest. Lastly, since we are looking at the top 10 counties, tag on the head function and input 10. Remember to give this new, updated data a unique name.\nNow we’re in good shape for the column chart.\nAs a reminder, to make a column chart in R, you’ll need to use the ggplot function. Within ggplot, you’ll first put the dataset you want to work from. In our case, it is the new data set we just created called top_10_gov_r_win. Next, you’ll use “aes” to input your x and y axes. For this chart, “locality” is our x (locality is just a fancy word for county in VA) and y will be the column “gov_r_win”. Within aes, we will reorder the x axis so that the results are ordered from most to least in the chart.\nNext, let’s adjust the layout of the chart to be horizontal. We can do that by using the function coord_flip().\nTo spice up the chart, we’ll add some labels for the axes and overall chart. To do this, you’ll use the scale_y_continuous function to create a y-axis label. Simply fill the function with name = “your desired label” and then add labels = scales::comma (separate by a comma). This particular addition essentially just separates the thousands with commas to help with the magnitude of numbers in the data.\n*You can see code below for what I chose to label the axes.\nFor the x-axis label, you’ll use the scale_x_discrete function and simply fill the function with name = “your desired label”.\nLastly, for an overall label for the chart, you’ll use the labs function and simply fill the function with name = “your desired label”.\nDON’T SKIP: Lastly, using + (which you’ve seen you need to use to separate each line of code), add geom_col(). This is crucial as it tells the ggplot function that you want to create a column/bar chart!\n\ngov_r_win_joined_vacomparison <- joined_vacomparison %>% \nmutate(gov_r_win = pct_youngkin - pct_mcauliffe)\n\n\ntop_10_gov_r_win <- gov_r_win_joined_vacomparison %>% \n  arrange(desc(gov_r_win)) %>% \n  head(10)\n\nggplot(top_10_gov_r_win, aes(x= reorder(locality, -gov_r_win), y=gov_r_win)) + \n  coord_flip() +\n  scale_y_continuous(name = \"Youngkin vs. McAuliffe Percent Difference\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Top 10 Counties Where Youngkin Outperformed McAuliffe\") +\n  geom_col()\n\n\n\n\nNext, let’s make a column chart that shows the top 10 counties where McAuliffe (D) did better in votes compared to the Democrat candidate for president, Biden.\n*APPLY ABOVE ALL ANNOTATIONS( (USING MUTATE FUNCTION with “pct_mcauliffe” and “biden_pct” TO CREATE NEW COLUMN).\nFOLLOW PREVIOUS ANNOTATIONS TO CREATE COLUMN CHART.\n\njoined_vacomparison <- joined_vacomparison %>% \nmutate(d_gov_to_pres = pct_mcauliffe - biden_pct)\n\nd_gov_to_pres_joined_vacomparison <- joined_vacomparison %>% \n  arrange(desc(d_gov_to_pres)) %>%\n  head(10)\n\nggplot(d_gov_to_pres_joined_vacomparison, aes(x= reorder(locality, -d_gov_to_pres), y=d_gov_to_pres)) +\n  coord_flip() +\n  scale_y_continuous(name = \"McAuliffe vs. Biden Percent Difference\", labels = scales::comma) +\n  scale_x_discrete(name = \"County\") +\n  labs(title = \"Top 10 Counties Where McAuliffe Outperformed Biden\") +\n  geom_col()\n\n\n\n\nLastly, let’s make a proper data table that displays the top 5 counties with the highest vote percentages for Biden.\nAs a reminder, to do this, let’s take our mass data set called joined_vacomparison and use the select function to pick out the particular columns we want to use. For this analysis, we will need locality and biden_pct. Next, we’ll use the arrange function and sort biden_pct in descending order using desc. In other words, sorting from largest to smallest. Lastly, since we are looking at the top 5 counties, tag on the head function and input 5. Remember to give this new, updated data a unique name.\nTo make the data table, we’ll use the DT::datatable function. The rest is simple. Input the new data set we just created (top_5_mcauliffe) into the function and copy the rest of the code below, making sure you include filter = “top” to make it interactive. You’re all set!\n\ntop_5_biden <- joined_vacomparison %>%\n  select(locality, biden_pct) %>% \n  arrange(desc(biden_pct)) %>% \n  head(5)\n\ntop_5_biden %>% \nDT::datatable(rownames = FALSE, filter = \"top\", \n                options = list(searching = FALSE, paging = FALSE, dom = \"tip\"))\n\n\n\n\n\n\nGREAT WORK!"
  }
]